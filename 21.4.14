#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
char* my_strpy(char* dest,const char *src)
//1.写一个函数指针pf,能够指向my_strpy
char*（*pf)(char*,const char*)
//2.写一个函数指针数组pfArr,能够存放4个my_strcpy函数的地址
char* (*pfArr[10])(char*,const char*)


//int Add(int x, int y)
//{
//	return x + y;
//}
//
//int Sub(int x, int y)
//{
//	return x - y;
//}
//int Mul(int x, int y)
//{
//	return x * y;
//}
//
//int Div(int x, int y)
//{
//	return x / y;
//}
//int main()
//{
//	//指针数组
//	int* arr[5];//
//	//需要一个数组，这个数组可以存放4个函数的地址—函数指针的数组
//	int(*pa)(int, int) = Add;//Sub/Mul/Div
//	int(*parr[4])(int, int) = { Add, Sub, Mul, Div };//函数指针的数组
//	int i = 0;
//	for (i = 0; i < 4; i++)
//	{
//		printf("%d\n",parr[i](2, 3));
//	}
//	return 0;
//}

//int Add(int a, int b)
//{
//	return a + b;
//}
//int main()
//{
//	int a = 10;
//	int b = 20;
//
//	int(*pa)(int, int) = Add;
//	printf("%d\n", (pa)(2, 3));
//	printf("%d\n", (*pa)(2, 3));
//
//	printf("%d\n", (**pa)(2, 3));//5
//	return 0;
//}


////signal是一个函数声明
////signal函数的参数有2个，第一个是int,第二个是函数指针，该函数指针指向的函数的参数是int,返回类型是void
////signal函数的返回类型也是一个函数指针：该函数指针指向的函数的参数是int，返回类型是void.
//void(*signal(int, void(*)(int)))(int);
//
////简化
//typedef void(*fun_t)(int);
//fun_t signal(int, fun_t);
//
//typedef unsigned int unit;
