#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
/*(* ( void(*)())  0)();*///把0强制类型转换成：void(*)()函数指针类型--0就是一个函数的地址
//调用0地址出的该函数

//void(*       signal(int, void(*)(int))          )(int);
//
//typedef void(*pfun_t(int));
//pfun_t signal(int, pfun_t);

//void Printf(char *ptr){
//	printf("%s\n", ptr);
//}
//int main()
//{
//	void(*p)(char*) = Printf;
//	(*p)("hello world");
//	return 0;
//}

//int ADD(int a, int b)
//{
//	return a + b;
//}
//int main(){
//	int a = 10;
//	int b = 20;
//	printf("%d\n", ADD(a, b));
//
//	printf("%p\n", &ADD);
//	printf("%p\n", ADD);
//
//	int(*pa)(int, int) = ADD;
//	printf("%d\n", (*pa)(a, b));
//	return 0;
//}

//void test(int **ptr){
//
//}
//int main()
//{
//	int *ptr;
//	int **pp = &ptr;
//	test(&ptr);
//	test(pp);
//	int* arr[10];
//	test(arr);//指针数组也可以
//	return 0;
//}

//void test(int **ptr)
//{
//	printf("num=%d\n", **ptr);
//}
//int main()
//{
//	int n = 10;
//	int *p = &n;
//	int **pp = &p;
//	test(pp);
//	return 0;
//}

//void print(int* p, int sz)
//{
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		printf("%d\n", *(p + i));
//	}
//}
//
//int main()
//{
//	int arr[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 };
//	int *p = arr;
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	//一级指针p,传给函数
//	print(p, sz);
//	return 0;
//}
